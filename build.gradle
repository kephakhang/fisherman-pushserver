buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

apply plugin: "kotlin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"

group "kr.co.korbit"
version "0.0.1"
mainClassName = "io.ktor.server.netty.EngineMain"



sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ["src/main/kotlin"]
    test.kotlin.srcDirs = test.java.srcDirs = ["src/test/kotlin"]
    test.resources.srcDirs = ["src/test/resources"]
    main.resources.srcDirs = ["src/main/resources", "src/main/resources-static", "src/main/resources-$profile"]
}

repositories {
    mavenLocal()
    jcenter()
    maven { url "https://kotlin.bintray.com/ktor" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-host-common:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-websockets:$ktor_version"
    implementation "io.ktor:ktor-auth:$ktor_version"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$ktor_version"
    implementation "com.sksamuel.hoplite:hoplite-core:$hoplite_version"
    implementation "com.sksamuel.hoplite:hoplite-yaml:$hoplite_version"
    implementation "org.apache.kafka:kafka-clients:$kafka_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"
    implementation "io.github.microutils:kotlin-logging:$kotlin_logging_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$fasterxml_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$fasterxml_version"
    implementation "io.ktor:ktor-network-tls:$ktor_version"
    implementation "com.github.oshi:oshi-core:$oshi_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

compileKotlin {
    kotlinOptions.freeCompilerArgs = ['-Xuse-experimental=kotlin.Experimental']
}

kotlin.experimental.coroutines = 'enable'

shadowJar {
    baseName = 'fisherman-pushserver'
    classifier = null
    version = null
}

task generateJks(type: JavaExec, dependsOn: 'classes') {
    classpath = sourceSets.main.runtimeClasspath
    main = 'kr.co.korbit.fisherman.common.CertificateGenerator'
}

getTasksByName("run", false).first().dependsOn('generateJks')
